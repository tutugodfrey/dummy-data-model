{"version":3,"sources":["../../main/src/DummyDataModel.js"],"names":["DummyDataModel","modelName","singleModel","substring","length","model","getObjectByField","bind","getFields","arrayOfObjects","objectField","fieldValue","objCollection","objCollector","field","undefined","modelToCreate","id","lastModel","lastModelId","result","Promise","resolve","reject","push","message","modelToUpdate","modelToFind","filter","error","condition","where","props","Object","keys","propMatch","searchResult","forEach","property","messsage","indexOfMatchedModel","indexOf","splice"],"mappings":";;;;;;;;;;AAAA,IAAMA;AACL,yBAAYC,SAAZ,EAAuB;AAAA;;AACtB,OAAKA,SAAL,GAAiBA,SAAjB;AACA,OAAKC,WAAL,GAAmBD,UAAUE,SAAV,CAAoB,CAApB,EAAuBF,UAAUG,MAAV,GAAmB,CAA1C,CAAnB;AACA,OAAKC,KAAL,GAAa,EAAb;AACA,OAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,OAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAjB;AACA;;AAPI;AAAA;AAAA,mCASYE,cATZ,EAS4BC,WAT5B,EASyCC,UATzC,EASqD;AAAA;AAAA;AAAA;;AAAA;AACvD,yBAAyBF,cAAzB,8HAAyC;AAAA,SAAjCG,aAAiC;;AACvC;AACA,SAAIA,cAAcF,WAAd,MAA+BC,UAAnC,EAA+C;AAC7C,aAAOC,aAAP;AACD;AACF;AANsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOvD,oCAA+BF,WAA/B;AACD;AAjBG;AAAA;AAAA,4BAmBMG,YAnBN,EAmBoBC,KAnBpB,EAmB2B;AAC7B,OAAID,aAAaC,KAAb,CAAJ,EAAyB;AACvB,WAAOD,aAAaC,KAAb,CAAP;AACD;AACD,UAAOC,SAAP;AACD;AACF;;AAzBK;AAAA;AAAA,yBA0BEC,aA1BF,EA0BiB;AAAA;;AACrB;AACA,OAAG,KAAKX,KAAL,CAAWD,MAAX,KAAsB,CAAzB,EAA4B;AAC3BY,kBAAcC,EAAd,GAAmB,CAAnB;AACA,IAFD,MAEO;AACN,QAAMC,YAAY,KAAKb,KAAL,CAAW,KAAKA,KAAL,CAAWD,MAAX,GAAoB,CAA/B,CAAlB;AACA,QAAMe,cAAc,KAAKX,SAAL,CAAeU,SAAf,EAA0B,IAA1B,CAApB;AACAF,kBAAcC,EAAd,GAAmBE,cAAc,CAAjC;AACA;AACD,OAAMC,SAAS,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAsB;AAChD,QAAG,MAAKlB,KAAL,CAAWmB,IAAX,CAAgBR,aAAhB,CAAH,EAAmC;AAClCM,aAAQN,aAAR;AACA;AACDO,WAAO,EAACE,6BAA2B,MAAKvB,WAAjC,EAAP;AACA,IALc,CAAf;AAMA,UAAOkB,MAAP;AACA;AA1CI;AAAA;AAAA,yBA4CEM,aA5CF,EA4CiB;AACrB;;AAEA;AA/CI;AAAA;AAAA,2BAiDIT,EAjDJ,EAiDQ;AAAA;;AACZ;AACA,OAAIU,oBAAJ;AACA,QAAKtB,KAAL,CAAWuB,MAAX,CAAkB,UAACvB,KAAD,EAAW;AAC5B,QAAGA,MAAMY,EAAN,KAAaA,EAAhB,EAAoB;AACnBU,mBAActB,KAAd;AACA;AACD,IAJD;AAKA,OAAMe,SAAS,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC/C,QAAGI,WAAH,EAAgB;AACfL,aAAQK,WAAR;AACA,KAFD,MAEO;AACNJ,YAAO,EAAEM,OAAU,OAAK3B,WAAf,eAAF,EAAP;AACA;AACD,IANc,CAAf;AAOA,UAAOkB,MAAP;AACA;AAjEI;AAAA;AAAA,uBAmEAU,SAnEA,EAmEW;AAAA;;AACf;;;;AAIA,OAAMV,SAAS,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC/C,QAAG,CAACO,UAAUC,KAAd,EAAqB;AACpBR;AACA,KAFD,MAEO;AACN,SAAMS,QAAQC,OAAOC,IAAP,CAAYJ,UAAUC,KAAtB,CAAd;AACA,SAAII,kBAAJ;AACA,SAAIC,qBAAJ;AACA,YAAK/B,KAAL,CAAWgC,OAAX,CAAmB,UAAChC,KAAD,EAAW;AAC7B8B,kBAAY,IAAZ;AACAH,YAAMK,OAAN,CAAc,UAACC,QAAD,EAAc;AAC3B,WAAGR,UAAUC,KAAV,CAAgBO,QAAhB,MAA8BjC,MAAMiC,QAAN,CAAjC,EAAkD;AACjDH,oBAAY,KAAZ;AACA;AACD,OAJD;AAKA,UAAGA,SAAH,EAAc;AACbC,sBAAe/B,KAAf;AACAiB,eAAQc,YAAR;AACA;AACD,MAXD;AAYA,SAAG,CAACA,YAAJ,EAAkB;AACjBd,cAAQ,EAAEiB,kBAAgB,OAAKrC,WAArB,WAAF,EAAR;AACA;AACD;AACD,IAvBc,CAAf;;AAyBA,UAAOkB,MAAP;AACA;AAlGI;AAAA;AAAA,4BAoGsB;AAAA;;AAAA,OAAnBU,SAAmB,uEAAP,KAAO;;AAC1B;;;;AAIA,OAAMV,SAAS,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAsB;AAChD,QAAGO,cAAc,KAAjB,EAAwB;AACvB;AACAR,aAAQ,OAAKjB,KAAb;AACA,KAHD,MAGO;AACN;AACA,SAAM2B,QAAQC,OAAOC,IAAP,CAAYJ,UAAUC,KAAtB,CAAd;;AAEA;AACA,SAAMK,eAAe,EAArB;AACA,SAAID,kBAAJ;AACA,YAAK9B,KAAL,CAAWgC,OAAX,CAAmB,UAAChC,KAAD,EAAW;AAC7B8B,kBAAY,IAAZ;AACAH,YAAMK,OAAN,CAAc,UAACC,QAAD,EAAc;AAC3B,WAAGR,UAAUC,KAAV,CAAgBO,QAAhB,MAA8BjC,MAAMiC,QAAN,CAAjC,EAAkD;AACjDH,oBAAY,KAAZ;AACA;AACD,OAJD;AAKA,UAAGA,SAAH,EAAc;AACbC,oBAAaZ,IAAb,CAAkBnB,KAAlB,EAAyB;AACzB;AACD,MAVD;AAWAiB,aAAQc,YAAR;AACA;AACD,IAxBc,CAAf;AAyBA,UAAOhB,MAAP;AACA;AAnII;AAAA;AAAA,0BAqIGU,SArIH,EAqIc;AAAA;;AAClB;;;;;;;AAOA,OAAMV,SAAS,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAsB;AAChD,QAAMS,QAAQC,OAAOC,IAAP,CAAYJ,UAAUC,KAAtB,CAAd;AACA,QAAII,kBAAJ;AACA,WAAK9B,KAAL,CAAWgC,OAAX,CAAmB,UAAChC,KAAD,EAAW;AAC7B8B,iBAAY,IAAZ;AACAH,WAAMK,OAAN,CAAc,UAACC,QAAD,EAAc;AAC3B,UAAGR,UAAUC,KAAV,CAAgBO,QAAhB,MAA8BjC,MAAMiC,QAAN,CAAjC,EAAkD;AACjDH,mBAAY,KAAZ;AACA;AACD,MAJD;AAKA,SAAGA,SAAH,EAAc;AACb,UAAMK,sBAAsB,OAAKnC,KAAL,CAAWoC,OAAX,CAAmBpC,KAAnB,CAA5B;AACA,UAAG,OAAKA,KAAL,CAAWqC,MAAX,CAAkBF,mBAAlB,EAAuC,CAAvC,CAAH,EAA8C;AAC7ClB,eAAQ,EAAEG,SAAY,OAAKvB,WAAjB,sBAAF,EAAR;AACA,OAFD,MAEO;AACNqB,cAAO,EAAEE,SAAY,OAAKvB,WAAjB,0BAAF,EAAP;AACA;AACD;AACD,KAfD;AAgBAqB,WAAO,EAAEE,SAAY,OAAKvB,WAAjB,iCAAF,EAAP;AACA,IApBc,CAAf;;AAsBA,UAAOkB,MAAP;AACA;AApKI;;AAAA;AAAA,GAAN;;kBAuKepB,c","file":"DummyDataModel.js","sourcesContent":["const DummyDataModel = class {\r\n\tconstructor(modelName) {\r\n\t\tthis.modelName = modelName;\r\n\t\tthis.singleModel = modelName.substring(0, modelName.length - 1);\r\n\t\tthis.model = [];\r\n\t\tthis.getObjectByField = this.getObjectByField.bind(this);\r\n\t\tthis.getFields = this.getFields.bind(this)\r\n\t}\r\n\r\n\tgetObjectByField(arrayOfObjects, objectField, fieldValue) {\r\n    for(let objCollection of arrayOfObjects) {\r\n      // const objCollection = arrayOfObjects[arraySize];\r\n      if (objCollection[objectField] === fieldValue) {\r\n        return objCollection;\r\n      }\r\n    }\r\n    return `No object with field ${objectField} found`;\r\n  }\r\n\r\n  getFields(objCollector, field) {\r\n    if (objCollector[field]) {\r\n      return objCollector[field];\r\n    }\r\n    return undefined;\r\n  }\r\n\t// define class methods\r\n\tcreate(modelToCreate) {\r\n\t\t// create a new model\r\n\t\tif(this.model.length === 0) {\r\n\t\t\tmodelToCreate.id = 1;\r\n\t\t} else {\r\n\t\t\tconst lastModel = this.model[this.model.length - 1];\r\n\t\t\tconst lastModelId = this.getFields(lastModel, 'id');\r\n\t\t\tmodelToCreate.id = lastModelId + 1;\r\n\t\t}\r\n\t\tconst result = new Promise((resolve, reject)  => {\r\n\t\t\tif(this.model.push(modelToCreate)) {\r\n\t\t\t\tresolve(modelToCreate);\r\n\t\t\t};\r\n\t\t\treject({message: `Can not create ${this.singleModel}`});\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\tupdate(modelToUpdate) {\r\n\t\t// update the model \r\n\r\n\t}\r\n\r\n\tfindById(id) {\r\n\t\t// return an object with the given id\r\n\t\tlet modelToFind;\r\n\t\tthis.model.filter((model) => {\r\n\t\t\tif(model.id === id) {\r\n\t\t\t\tmodelToFind = model;\r\n\t\t\t}\r\n\t\t});\r\n\t\tconst result = new Promise((resolve, reject) => {\r\n\t\t\tif(modelToFind) {\r\n\t\t\t\tresolve(modelToFind)\r\n\t\t\t} else {\r\n\t\t\t\treject({ error: `${this.singleModel} not found` });\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfind(condition) {\r\n\t\t/* return a single object that meet the condition\r\n\t\t\tcondition is single object with property where whose value is further\r\n\t\t\tan object with key => value pair of the properties of the object to find\r\n\t\t*/\r\n\t\tconst result = new Promise((resolve, reject) => {\r\n\t\t\tif(!condition.where) {\r\n\t\t\t\treject(`missing object propertiy 'where' to find model`);\r\n\t\t\t} else {\r\n\t\t\t\tconst props = Object.keys(condition.where);\r\n\t\t\t\tlet propMatch;\r\n\t\t\t\tlet searchResult;\r\n\t\t\t\tthis.model.forEach((model) => {\r\n\t\t\t\t\tpropMatch = true;\r\n\t\t\t\t\tprops.forEach((property) => {\r\n\t\t\t\t\t\tif(condition.where[property] !== model[property]) {\r\n\t\t\t\t\t\t\tpropMatch = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(propMatch) {\r\n\t\t\t\t\t\tsearchResult = model;\r\n\t\t\t\t\t\tresolve(searchResult);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif(!searchResult) {\r\n\t\t\t\t\tresolve({ messsage: `No ${this.singleModel} found`});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfindAll(condition = 'all') {\r\n\t\t/* return all objects that meet the condition \r\n\t\t\tcondition is single object with property where whose value is further\r\n\t\t\tan object with key => value pair of the properties of the object to find\r\n\t\t*/\r\n\t\tconst result = new Promise((resolve, reject)  => {\r\n\t\t\tif(condition === 'all') {\r\n\t\t\t\t// all model in this instance\r\n\t\t\t\tresolve(this.model);\r\n\t\t\t} else {\r\n\t\t\t\t// find model that meets the given condition\r\n\t\t\t\tconst props = Object.keys(condition.where);\r\n\r\n\t\t\t\t// array of objects that meet the condition\r\n\t\t\t\tconst searchResult = [];\r\n\t\t\t\tlet propMatch;\r\n\t\t\t\tthis.model.forEach((model) => {\r\n\t\t\t\t\tpropMatch = true;\r\n\t\t\t\t\tprops.forEach((property) => {\r\n\t\t\t\t\t\tif(condition.where[property] !== model[property]) {\r\n\t\t\t\t\t\t\tpropMatch = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(propMatch) {\r\n\t\t\t\t\t\tsearchResult.push(model);;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tresolve(searchResult)\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\tdestroy(condition) {\r\n\t\t/* \r\n\t\t\tdelete the object that meet the condition \r\n\t\t\tcondition is single object with property where whose value is further\r\n\t\t\tan object with key => value pair of the properties of the object to find.\r\n\t\t\tif several object match the specified condition, only the first match will\r\n\t\t\tbe deleted\r\n\t\t*/\r\n\t\tconst result = new Promise((resolve, reject)  => {\r\n\t\t\tconst props = Object.keys(condition.where);\r\n\t\t\tlet propMatch;\r\n\t\t\tthis.model.forEach((model) => {\r\n\t\t\t\tpropMatch = true;\r\n\t\t\t\tprops.forEach((property) => {\r\n\t\t\t\t\tif(condition.where[property] !== model[property]) {\r\n\t\t\t\t\t\tpropMatch = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif(propMatch) {\r\n\t\t\t\t\tconst indexOfMatchedModel = this.model.indexOf(model);\r\n\t\t\t\t\tif(this.model.splice(indexOfMatchedModel, 1)) {\r\n\t\t\t\t\t\tresolve({ message: `${this.singleModel} has been deleted` });\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treject({ message: `${this.singleModel} could not be deleted` });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treject({ message: `${this.singleModel} not found, not action taken` });\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport default DummyDataModel;\r\n"]}