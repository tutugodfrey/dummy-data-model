{"version":3,"sources":["../../main/src/DummyDataModel.js"],"names":["DummyDataModel","modelName","uniqueKeys","requiredFields","singleModel","substring","length","model","createModel","bind","getObjectByField","getFields","arrayOfObjects","objectField","fieldValue","objCollection","objCollector","field","undefined","modelToCreate","result","Promise","resolve","reject","console","log","allFieldsPassed","forEach","required","message","id","push","lastModel","lastModelId","foundDuplicate","prop","modelToUpdate","propsToUpdate","props","Object","keys","wrongModel","indexOfModel","indexOf","property","modelToFind","filter","error","condition","where","propMatch","searchResult","indexOfMatchedModel","splice"],"mappings":"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","file":"DummyDataModel.js","sourcesContent":["const DummyDataModel = class {\r\n  constructor(modelName, uniqueKeys = [], requiredFields = []) {\r\n    this.modelName = modelName;\r\n    this.uniqueKeys = uniqueKeys;\r\n    this.requiredFields = requiredFields;\r\n    this.singleModel = modelName.substring(0, modelName.length - 1);\r\n    this.model = [];\r\n    this.createModel = this.createModel.bind(this);\r\n    this.getObjectByField = this.getObjectByField.bind(this);\r\n    this.getFields = this.getFields.bind(this);\r\n  }\r\n\r\n  getObjectByField(arrayOfObjects, objectField, fieldValue) {\r\n    for (const objCollection of arrayOfObjects) {\r\n      // const objCollection = arrayOfObjects[arraySize];\r\n      if (objCollection[objectField] === fieldValue) {\r\n        return objCollection;\r\n      }\r\n    }\r\n    return `No object with field ${objectField} found`;\r\n  }\r\n\r\n  getFields(objCollector, field) {\r\n    if (objCollector[field]) {\r\n      return objCollector[field];\r\n    }\r\n    return undefined;\r\n  }\r\n  // define class methods\r\n  create(modelToCreate) {\r\n    // create a new model\r\n    const result = new Promise((resolve, reject) => {\r\n      if(this.requiredFields.length === 0) {\r\n        this.createModel(modelToCreate, resolve, reject);\r\n        console.log('models', this.model)\r\n      } else {\r\n        let allFieldsPassed = true;\r\n        this.requiredFields.forEach((required) => {\r\n          if(!modelToCreate[required]) {\r\n            console.log(modelToCreate[required])\r\n            allFieldsPassed = false;\r\n          }\r\n        });\r\n        if(!allFieldsPassed) {\r\n          reject({ message: 'missing required field' })\r\n        } else {\r\n          this.createModel(modelToCreate, resolve, reject);\r\n        }\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  createModel(modelToCreate, resolve, reject) {\r\n    if (this.model.length === 0) {\r\n      modelToCreate.id = 1;\r\n      if (this.model.push(modelToCreate)) {\r\n        resolve(modelToCreate);\r\n      }\r\n      reject({ message: `Can not create ${this.singleModel}` });\r\n    } else {\r\n      const lastModel = this.model[this.model.length - 1];\r\n      const lastModelId = this.getFields(lastModel, 'id');\r\n      // verify uniqueKeys\r\n      if(this.uniqueKeys.length === 0) {\r\n        if (this.model.push(modelToCreate)) {\r\n          resolve(modelToCreate);\r\n        }\r\n        reject({ message: `Can not create ${this.singleModel}` });\r\n      } else {\r\n        let foundDuplicate = false;\r\n        this.model.forEach((model) => {\r\n          this.uniqueKeys.forEach((prop) => {\r\n            if(model[prop] === modelToCreate[prop]) {\r\n              foundDuplicate = true;\r\n              reject({ message: `duplicate entry for unique key`});\r\n            }\r\n          });\r\n        });\r\n        if(!foundDuplicate) {\r\n          modelToCreate.id = lastModelId + 1;\r\n          if (this.model.push(modelToCreate)) {\r\n            resolve(modelToCreate);\r\n          }\r\n          reject({ message: `Can not create ${this.singleModel}` });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  update(modelToUpdate, propsToUpdate) {\r\n    /*\r\n\t\t\tpropsToUpdate contain the new properties to replace the old ones\r\n\t\t\tthis method should be called on the particular object to update.\r\n\t\t\twhich means that before call update you must use the finder methods to\r\n\t\t\tget the particular object.\r\n\t\t*/\r\n    const result = new Promise((resolve, reject) => {\r\n      if ((typeof propsToUpdate === 'object') && (typeof modelToUpdate === 'object')) {\r\n        const props = Object.keys(propsToUpdate);\r\n        this.model.forEach((model) => {\r\n          if (modelToUpdate.id === model.id) {\r\n            let wrongModel = false;\r\n            if(this.uniqueKeys.length !== 0) {\r\n              this.uniqueKeys.forEach((prop) => {\r\n                if(modelToUpdate[prop] !== model[prop]) {\r\n                  wrongModel = true;\r\n                  reject({ message: `${this.singleModel} not found` });\r\n                }\r\n              }) \r\n            }\r\n            if(!wrongModel) {\r\n              const indexOfModel = this.model.indexOf(model);\r\n              props.forEach((property) => {\r\n                model[property] = propsToUpdate[property];\r\n              });\r\n              this.model[indexOfModel] = model;\r\n              resolve(model);\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        reject({ message: 'invalid argument passed to update! expects argument1 and argument2 to be objects' });\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  findById(id) {\r\n    // return an object with the given id\r\n    let modelToFind;\r\n    this.model.filter((model) => {\r\n      if (model.id === id) {\r\n        modelToFind = model;\r\n      }\r\n    });\r\n    const result = new Promise((resolve, reject) => {\r\n      if (modelToFind) {\r\n        resolve(modelToFind);\r\n      } else {\r\n        reject({ error: `${this.singleModel} not found` });\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  find(condition) {\r\n    /* return a single object that meet the condition\r\n\t\t\tcondition is single object with property where whose value is further\r\n\t\t\tan object with key => value pair of the properties of the object to find\r\n\t\t*/\r\n    const result = new Promise((resolve, reject) => {\r\n      if (!condition || !condition.where) {\r\n        reject({ message: 'missing object propertiy \\'where\\' to find model'});\r\n      } else {\r\n        const props = Object.keys(condition.where);\r\n        let propMatch;\r\n        let searchResult;\r\n        this.model.forEach((model) => {\r\n          propMatch = true;\r\n          props.forEach((property) => {\r\n            if (condition.where[property] !== model[property]) {\r\n              propMatch = false;\r\n            }\r\n          });\r\n          if (propMatch) {\r\n            searchResult = model;\r\n            resolve(searchResult);\r\n          }\r\n        });\r\n        if (!searchResult) {\r\n          reject({ message: `${this.singleModel} not found` });\r\n        }\r\n      }\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  findAll(condition = 'all') {\r\n    /* return all objects that meet the condition\r\n\t\t\tcondition is single object with property where whose value is further\r\n\t\t\tan object with key => value pair of the properties of the object to find\r\n\t\t*/\r\n    const result = new Promise((resolve, reject) => {\r\n      if (condition === 'all') {\r\n        // all model in this instance\r\n        resolve(this.model);\r\n      } else {\r\n        // find model that meets the given condition\r\n        const props = Object.keys(condition.where);\r\n\r\n        // array of objects that meet the condition\r\n        const searchResult = [];\r\n        let propMatch;\r\n        this.model.forEach((model) => {\r\n          propMatch = true;\r\n          props.forEach((property) => {\r\n            if (condition.where[property] !== model[property]) {\r\n              propMatch = false;\r\n            }\r\n          });\r\n          if (propMatch) {\r\n            searchResult.push(model);\r\n          }\r\n        });\r\n        if(searchResult) {\r\n          resolve(searchResult);\r\n        } else {\r\n          resolve(searchResult);\r\n        }\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  destroy(condition) {\r\n    /*\r\n\t\t\tdelete the object that meet the condition\r\n\t\t\tcondition is single object with property where whose value is further\r\n\t\t\tan object with key => value pair of the properties of the object to find.\r\n\t\t\tif several object match the specified condition, only the first match will\r\n\t\t\tbe deleted\r\n\t\t*/\r\n    const result = new Promise((resolve, reject) => {\r\n      const props = Object.keys(condition.where);\r\n      let propMatch;\r\n      this.model.forEach((model) => {\r\n        propMatch = true;\r\n        props.forEach((property) => {\r\n          if (condition.where[property] !== model[property]) {\r\n            propMatch = false;\r\n          }\r\n        });\r\n        if (propMatch) {\r\n          const indexOfMatchedModel = this.model.indexOf(model);\r\n          if (this.model.splice(indexOfMatchedModel, 1)) {\r\n            resolve({ message: `${this.singleModel} has been deleted` });\r\n          } else {\r\n            reject({ message: `${this.singleModel} could not be deleted` });\r\n          }\r\n        }\r\n      });\r\n      reject({ message: `${this.singleModel} not found, not action taken` });\r\n    });\r\n\r\n    return result;\r\n  }\r\n};\r\n\r\nexport default DummyDataModel;\r\n"]}