{"version":3,"sources":["../../main/src/DummyDataModel.js"],"names":["DummyDataModel","modelName","singleModel","substring","length","model","getObjectByField","bind","getFields","arrayOfObjects","objectField","fieldValue","objCollection","objCollector","field","undefined","modelToCreate","id","lastModel","lastModelId","result","Promise","resolve","reject","push","message","modelToUpdate","propsToUpdate","props","Object","keys","filter","forEach","property","modelToFind","error","condition","where","propMatch","searchResult","indexOfMatchedModel","indexOf","splice"],"mappings":"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","file":"DummyDataModel.js","sourcesContent":["const DummyDataModel = class {\r\n\tconstructor(modelName) {\r\n\t\tthis.modelName = modelName;\r\n\t\tthis.singleModel = modelName.substring(0, modelName.length - 1);\r\n\t\tthis.model = [];\r\n\t\tthis.getObjectByField = this.getObjectByField.bind(this);\r\n\t\tthis.getFields = this.getFields.bind(this)\r\n\t}\r\n\r\n\tgetObjectByField(arrayOfObjects, objectField, fieldValue) {\r\n    for(let objCollection of arrayOfObjects) {\r\n      // const objCollection = arrayOfObjects[arraySize];\r\n      if (objCollection[objectField] === fieldValue) {\r\n        return objCollection;\r\n      }\r\n    }\r\n    return `No object with field ${objectField} found`;\r\n  }\r\n\r\n  getFields(objCollector, field) {\r\n    if (objCollector[field]) {\r\n      return objCollector[field];\r\n    }\r\n    return undefined;\r\n  }\r\n\t// define class methods\r\n\tcreate(modelToCreate) {\r\n\t\t// create a new model\r\n\t\tif(this.model.length === 0) {\r\n\t\t\tmodelToCreate.id = 1;\r\n\t\t} else {\r\n\t\t\tconst lastModel = this.model[this.model.length - 1];\r\n\t\t\tconst lastModelId = this.getFields(lastModel, 'id');\r\n\t\t\tmodelToCreate.id = lastModelId + 1;\r\n\t\t}\r\n\t\tconst result = new Promise((resolve, reject)  => {\r\n\t\t\tif(this.model.push(modelToCreate)) {\r\n\t\t\t\tresolve(modelToCreate);\r\n\t\t\t};\r\n\t\t\treject({message: `Can not create ${this.singleModel}`});\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\tupdate(modelToUpdate, propsToUpdate) {\r\n\t\t/* \r\n\t\t\tpropsToUpdate contain the new properties to replace the old ones\r\n\t\t\tthis method should be called on the particular object to update.\r\n\t\t\twhich means that before call update you must use the finder methods to \r\n\t\t\tget the particular object.\r\n\t\t*/\r\n\t\tconst result = new Promise((resolve, reject) => {\r\n\t\t\tif((typeof propsToUpdate === 'object') && (typeof modelToUpdate === 'object')) {\r\n\t\t\t\tconst props = Object.keys(propsToUpdate);\r\n\t\t\t\tthis.model.filter((model) => {\r\n\t\t\t\t\tif(model === modelToUpdate) {\r\n\t\t\t\t\t\tprops.forEach((property) => {\r\n\t\t\t\t\t\t\tmodel[property] = propsToUpdate[property]\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tresolve(model);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treject({ message: `${this.singleModel} not found` })\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\treject({ message: `missing object propertiy 'where' to find model` });\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfindById(id) {\r\n\r\n\t\t// return an object with the given id\r\n\t\tlet modelToFind;\r\n\t\tthis.model.filter((model) => {\r\n\t\t\tif(model.id === id) {\r\n\t\t\t\tmodelToFind = model;\r\n\t\t\t}\r\n\t\t});\r\n\t\tconst result = new Promise((resolve, reject) => {\r\n\t\t\tif(modelToFind) {\r\n\t\t\t\tresolve(modelToFind)\r\n\t\t\t} else {\r\n\t\t\t\treject({ error: `${this.singleModel} not found` });\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfind(condition) {\r\n\t\t/* return a single object that meet the condition\r\n\t\t\tcondition is single object with property where whose value is further\r\n\t\t\tan object with key => value pair of the properties of the object to find\r\n\t\t*/\r\n\t\tconst result = new Promise((resolve, reject) => {\r\n\t\t\tif(!condition.where) {\r\n\t\t\t\treject(`missing object propertiy 'where' to find model`);\r\n\t\t\t} else {\r\n\t\t\t\tconst props = Object.keys(condition.where);\r\n\t\t\t\tlet propMatch;\r\n\t\t\t\tlet searchResult;\r\n\t\t\t\tthis.model.forEach((model) => {\r\n\t\t\t\t\tpropMatch = true;\r\n\t\t\t\t\tprops.forEach((property) => {\r\n\t\t\t\t\t\tif(condition.where[property] !== model[property]) {\r\n\t\t\t\t\t\t\tpropMatch = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(propMatch) {\r\n\t\t\t\t\t\tsearchResult = model;\r\n\t\t\t\t\t\tresolve(searchResult);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif(!searchResult) {\r\n\t\t\t\t\treject({ message: `${this.singleModel} not found`});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfindAll(condition = 'all') {\r\n\t\t/* return all objects that meet the condition \r\n\t\t\tcondition is single object with property where whose value is further\r\n\t\t\tan object with key => value pair of the properties of the object to find\r\n\t\t*/\r\n\t\tconst result = new Promise((resolve, reject)  => {\r\n\t\t\tif(condition === 'all') {\r\n\t\t\t\t// all model in this instance\r\n\t\t\t\tresolve(this.model);\r\n\t\t\t} else {\r\n\t\t\t\t// find model that meets the given condition\r\n\t\t\t\tconst props = Object.keys(condition.where);\r\n\r\n\t\t\t\t// array of objects that meet the condition\r\n\t\t\t\tconst searchResult = [];\r\n\t\t\t\tlet propMatch;\r\n\t\t\t\tthis.model.forEach((model) => {\r\n\t\t\t\t\tpropMatch = true;\r\n\t\t\t\t\tprops.forEach((property) => {\r\n\t\t\t\t\t\tif(condition.where[property] !== model[property]) {\r\n\t\t\t\t\t\t\tpropMatch = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(propMatch) {\r\n\t\t\t\t\t\tsearchResult.push(model);;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tresolve(searchResult)\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\tdestroy(condition) {\r\n\t\t/* \r\n\t\t\tdelete the object that meet the condition \r\n\t\t\tcondition is single object with property where whose value is further\r\n\t\t\tan object with key => value pair of the properties of the object to find.\r\n\t\t\tif several object match the specified condition, only the first match will\r\n\t\t\tbe deleted\r\n\t\t*/\r\n\t\tconst result = new Promise((resolve, reject)  => {\r\n\t\t\tconst props = Object.keys(condition.where);\r\n\t\t\tlet propMatch;\r\n\t\t\tthis.model.forEach((model) => {\r\n\t\t\t\tpropMatch = true;\r\n\t\t\t\tprops.forEach((property) => {\r\n\t\t\t\t\tif(condition.where[property] !== model[property]) {\r\n\t\t\t\t\t\tpropMatch = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif(propMatch) {\r\n\t\t\t\t\tconst indexOfMatchedModel = this.model.indexOf(model);\r\n\t\t\t\t\tif(this.model.splice(indexOfMatchedModel, 1)) {\r\n\t\t\t\t\t\tresolve({ message: `${this.singleModel} has been deleted` });\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treject({ message: `${this.singleModel} could not be deleted` });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treject({ message: `${this.singleModel} not found, not action taken` });\r\n\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport default DummyDataModel;\r\n"]}