{"version":3,"sources":["../../main/src/DummyDataModel.js"],"names":["DummyDataModel","modelName","uniqueKeys","requiredFields","Array","isArray","typeError","singleModel","substring","length","model","createBulkItem","bind","createModel","getObjectByField","getFields","arrayOfObjects","objectField","fieldValue","objCollection","objCollector","field","undefined","modelToCreate","resolve","reject","id","push","message","lastModel","lastModelId","foundDuplicate","forEach","prop","result","Promise","allFieldsPassed","requiredFieldsCollection","required","modelsToCreate","createdModels","res","then","response","allModelsPassed","modelToUpdate","propsToUpdate","props","Object","keys","foundModel","filter","property","modelToFind","error","condition","where","propMatch","searchResult","indexOfMatchedModel","indexOf","splice"],"mappings":"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","file":"DummyDataModel.js","sourcesContent":["const DummyDataModel = class {\n\tconstructor(modelName, uniqueKeys = [], requiredFields = []) {\n\t\tif (!Array.isArray(uniqueKeys) || !Array.isArray(requiredFields)) {\n      return { typeError: 'argument2 and argument3 must be of type array' };\n    }\n\t\tthis.modelName = modelName;\n\t\tthis.uniqueKeys = uniqueKeys;\n    this.requiredFields = requiredFields;\n\t\tthis.singleModel = modelName.substring(0, modelName.length - 1);\n\t\tthis.model = [];\n\t\tthis.createBulkItem = this.createBulkItem.bind(this)\n\t\tthis.createModel = this.createModel.bind(this);\n\t\tthis.getObjectByField = this.getObjectByField.bind(this);\n\t\tthis.getFields = this.getFields.bind(this)\n\t}\n\n\tgetObjectByField(arrayOfObjects, objectField, fieldValue) {\n    for(let objCollection of arrayOfObjects) {\n      // const objCollection = arrayOfObjects[arraySize];\n      if (objCollection[objectField] === fieldValue) {\n        return objCollection;\n      }\n    }\n    return `No object with field ${objectField} found`;\n  }\n\n  getFields(objCollector, field) {\n    if (objCollector[field]) {\n      return objCollector[field];\n    }\n    return undefined;\n\t}\n\n\t// private interface for creating model\n\t// check for unique keys\n\t// then create a new model \n\tcreateModel(modelToCreate, resolve, reject) {\n    if (this.model.length === 0) {\n      modelToCreate.id = 1;\n      if (this.model.push(modelToCreate)) {\n        resolve(modelToCreate);\n      }\n      reject({ message: `Can not create ${this.singleModel}` });\n    } else {\n      const lastModel = this.model[this.model.length - 1];\n      const lastModelId = this.getFields(lastModel, 'id');\n      // verify uniqueKeys\n      if (this.uniqueKeys.length === 0) {\n\t\t\t\tmodelToCreate.id = lastModelId + 1;\n        if (this.model.push(modelToCreate)) {\n          resolve(modelToCreate);\n        }\n        reject({ message: `Can not create ${this.singleModel}` });\n      } else {\n        let foundDuplicate = false;\n        this.model.forEach((model) => {\n          this.uniqueKeys.forEach((prop) => {\n            if (model[prop] === modelToCreate[prop]) {\n\t\t\t\t\t\t\tfoundDuplicate = true;\n              reject({ message: `duplicate entry for unique key ${prop}` });\n            }\n          });\n        });\n        if (!foundDuplicate) {\n          modelToCreate.id = lastModelId + 1;\n          if (this.model.push(modelToCreate)) {\n            resolve(modelToCreate);\n          }\n          reject({ message: `Can not create ${this.singleModel}` });\n        }\n      }\n    }\n\t}\n\t\n\t// public interface to create a single model\n\tcreate(modelToCreate) {\n\t\t// create a new model\n\t\tconst result = new Promise((resolve, reject) => {\n\t\t\tif (this.requiredFields.length === 0) {\n\t\t\t\tthis.createModel(modelToCreate, resolve, reject);\n\t\t\t} else {\n\t\t\t\tlet allFieldsPassed = true;\n\t\t\t\tconst requiredFieldsCollection = [];\n\t\t\t\tthis.requiredFields.forEach((required) => {\n\t\t\t\t\tif (!modelToCreate[required]) {\n\t\t\t\t\t\trequiredFieldsCollection.push(required);\n\t\t\t\t\t\tallFieldsPassed = false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (!allFieldsPassed) {\n\t\t\t\t\treject({ message: `missing required field ${requiredFieldsCollection}` });\n\t\t\t\t} else {\n\t\t\t\t\tthis.createModel(modelToCreate, resolve, reject);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t}\n\n\t// send each item to createModel \n\t// and resolve result as a promise\n\tcreateBulkItem(modelToCreate){\n\t\tconst result =  new Promise((resolve, reject) => {\n\t\t\tthis.createModel(modelToCreate, resolve, reject);\n\t\t});\n\t\treturn result;\n\t}\n\n\tbulkCreate(modelsToCreate) {\n\t\t// create a new model\n\t\tconst createdModels = [];\n      if (this.requiredFields.length === 0) {\n        modelsToCreate.forEach((modelToCreate) => {\n\t\t\t\t\tconst res =\tthis.createBulkItem(modelToCreate);\n\t\t\t\t\tres.then(response => {\n\t\t\t\t\t\tcreatedModels.push(response)\n\t\t\t\t\t\tif (createdModels.length === modelsToCreate.length) {\n\t\t\t\t\t\t\treturn createdModels;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n      } else {\n        let allFieldsPassed = true;\n        let allModelsPassed = true;\n        modelsToCreate.forEach((modelToCreate) => {\n          this.requiredFields.forEach((required) => {\n            if (!modelToCreate[required]) {\n              allFieldsPassed = false;\n              allModelsPassed = false;\n            }\n          });\n        });\n\n        if (!allFieldsPassed && !allModelsPassed) {\n          reject({ message: 'missing required field' });\n        } else {\n          modelsToCreate.forEach((modelToCreate) => {\n\t\t\t\t\t\tconst res =\tthis.createBulkItem(modelToCreate);\n\t\t\t\t\t\tres.then(response => {\n\t\t\t\t\t\t\tcreatedModels.push(response)\n\t\t\t\t\t\t\tif (createdModels.length === modelsToCreate.length) {\n\t\t\t\t\t\t\t\treturn createdModels;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n          });\n        }\n\t\t\t}\n\t\t\t\n\t\tconst result =  new Promise((resolve, reject) => {\n\t\t\tresolve(createdModels);\n\t\t});\n\n\t\treturn result\n\t}\n\t\n\tupdate(modelToUpdate, propsToUpdate) {\n\t\t/* \n\t\t\tpropsToUpdate contain the new properties to replace the old ones\n\t\t\tthis method should be called on the particular object to update.\n\t\t\twhich means that before call update you must use the finder methods to \n\t\t\tget the particular object.\n\t\t*/\n\t\tconst result = new Promise((resolve, reject) => {\n\t\t\tif((typeof propsToUpdate === 'object') && (typeof modelToUpdate === 'object')) {\n\t\t\t\tconst props = Object.keys(propsToUpdate);\n\t\t\t\tlet foundModel = this.model.filter((model) => {\n\t\t\t\t\treturn model.id === modelToUpdate.id\n\t\t\t\t});\n\t\t\t\tfoundModel = foundModel[0];\n\t\t\t\tif (!foundModel) {\n\t\t\t\t\treject({ message: `${this.singleModel} not found` })\n\t\t\t\t} else {\n\t\t\t\t\tprops.forEach((property) => {\n\t\t\t\t\t\tfoundModel[property] = propsToUpdate[property]\n\t\t\t\t\t});\n\t\t\t\t\tresolve(foundModel);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treject({ message: `missing object propertiy 'where' to find model` });\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t}\n\n\tfindById(id) {\n\t\t// return an object with the given id\n\t\tlet modelToFind =this.model.filter((model) => {\n\t\t\treturn model.id === id;\n\t\t});\n\t\tconst result = new Promise((resolve, reject) => {\n\t\t\tmodelToFind = modelToFind[0];\n\t\t\tif(modelToFind) {\n\t\t\t\tresolve(modelToFind)\n\t\t\t} else {\n\t\t\t\treject({ error: `${this.singleModel} not found` });\n\t\t\t}\n\t\t})\n\t\treturn result;\n\t}\n\n\tfind(condition) {\n\t\t/* return a single object that meet the condition\n\t\t\tcondition is single object with property where whose value is further\n\t\t\tan object with key => value pair of the properties of the object to find\n\t\t*/\n\t\tconst result = new Promise((resolve, reject) => {\n\t\t\tif (!condition || !condition.where) {\n\t\t\t\treject({ message: `missing object propertiy 'where' to find model` });\n\t\t\t} else {\n\t\t\t\tconst props = Object.keys(condition.where);\n\t\t\t\tlet propMatch;\n\t\t\t\tlet searchResult;\n\t\t\t\tthis.model.forEach((model) => {\n\t\t\t\t\tpropMatch = true;\n\t\t\t\t\tprops.forEach((property) => {\n\t\t\t\t\t\tif (condition.where[property] !== model[property]) {\n\t\t\t\t\t\t\tpropMatch = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tif (propMatch) {\n\t\t\t\t\t\tsearchResult = model;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (searchResult) {\n\t\t\t\t\tresolve(searchResult);\n\t\t\t\t} else {\n\t\t\t\t\treject({ message: `${this.singleModel} not found`});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t}\n\n\tfindAll(condition = 'all') {\n\t\t/* return all objects that meet the condition \n\t\t\tcondition is single object with property where whose value is further\n\t\t\tan object with key => value pair of the properties of the object to find\n\t\t*/\n\t\tconst result = new Promise((resolve, reject)  => {\n\t\t\tif(condition === 'all') {\n\t\t\t\t// all model in this instance\n\t\t\t\tresolve(this.model);\n\t\t\t} else {\n\t\t\t\t// find model that meets the given condition\n\t\t\t\tconst props = Object.keys(condition.where);\n\n\t\t\t\t// array of objects that meet the condition\n\t\t\t\tconst searchResult = [];\n\t\t\t\tlet propMatch;\n\t\t\t\tthis.model.forEach((model) => {\n\t\t\t\t\tpropMatch = true;\n\t\t\t\t\tprops.forEach((property) => {\n\t\t\t\t\t\tif(condition.where[property] !== model[property]) {\n\t\t\t\t\t\t\tpropMatch = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tif(propMatch) {\n\t\t\t\t\t\tsearchResult.push(model);;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresolve(searchResult)\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t}\n\n\tdestroy(condition) {\n\t\t/* \n\t\t\tdelete the object that meet the condition \n\t\t\tcondition is single object with property where whose value is further\n\t\t\tan object with key => value pair of the properties of the object to find.\n\t\t\tif several object match the specified condition, only the first match will\n\t\t\tbe deleted\n\t\t*/\n\t\tconst result = new Promise((resolve, reject)  => {\n\t\t\tconst props = Object.keys(condition.where);\n\t\t\tlet propMatch;\n\t\t\tthis.model.forEach((model) => {\n\t\t\t\tpropMatch = true;\n\t\t\t\tprops.forEach((property) => {\n\t\t\t\t\tif(condition.where[property] !== model[property]) {\n\t\t\t\t\t\tpropMatch = false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif(propMatch) {\n\t\t\t\t\tconst indexOfMatchedModel = this.model.indexOf(model);\n\t\t\t\t\tif(this.model.splice(indexOfMatchedModel, 1)) {\n\t\t\t\t\t\tresolve({ message: `${this.singleModel} has been deleted` });\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject({ message: `${this.singleModel} could not be deleted` });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\treject({ message: `${this.singleModel} not found, not action taken` });\n\t\t});\n\n\t\treturn result;\n\t}\n}\n\nexport default DummyDataModel;\n"]}