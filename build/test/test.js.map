{"version":3,"sources":["../../main/test/test.js"],"names":["expect","chai","users","DataModel","user1","name","email","address","user2","userWithoutEmail","noEmail","bulkUsers","createdUser2","createdUser1","wrongdUser1","id","userToUpdate1","describe","it","to","be","a","an","instanceOf","model","create","then","user","Object","assign","eql","catch","error","message","bulkCreate","result","length","equal","update","newUser2","findById","find","where","findAll","allUsers","have","of","at","least","destroy"],"mappings":";;AACA;;;;AACA;;;;;;IAEQA,M,GAAWC,c,CAAXD,M;;AACR,IAAME,QAAQ,IAAIC,wBAAJ,CAAc,OAAd,EAAuB,CAAC,MAAD,CAAvB,EAAiC,CAAC,MAAD,EAAS,OAAT,CAAjC,CAAd;AACA,IAAMC,QAAQ;AACbC,OAAM,UADO;AAEbC,QAAO,uBAFM;AAGbC,UAAS;AAHI,CAAd;AAKA,IAAMC,QAAQ;AACbH,OAAM,OADO;AAEbC,QAAO,oBAFM;AAGbC,UAAS;AAHI,CAAd;;AAMA,IAAME,mBAAkB;AACvBJ,OAAM,OADiB;AAEvBK,UAAS,oBAFc;AAGvBH,UAAS;AAHc,CAAxB;;AAMA,IAAMI,YAAY,CACjB;AACCN,OAAM,OADP;AAECC,QAAO,iBAFR;AAGCC,UAAS;AAHV,CADiB,EAMjB;AACCF,OAAM,QADP;AAECC,QAAO,kBAFR;AAGCC,UAAS;AAHV,CANiB,EAWjB;AACCF,OAAM,MADP;AAECC,QAAO,gBAFR;AAGCC,UAAS;AAHV,CAXiB,CAAlB;AAiBA,IAAMK,eAAe,EAArB;AACA,IAAMC,eAAe,EAArB;AACA,IAAMC,cAAc;AACnBC,KAAI,EADe;AAEnBV,OAAM,OAFa;AAGnBC,QAAO,oBAHY;AAInBC,UAAS;AAJU,CAApB;AAMA,IAAMS,gBAAgB;AACrBX,OAAM,WADe;AAErBE,UAAS;AAFY,CAAtB;;AAKAU,SAAS,kBAAT,EAA6B,YAAM;AAClCA,UAAS,WAAT,EAAsB,YAAM;AAC3BC,KAAG,0BAAH,EAA+B,YAAM;AACpClB,UAAOG,wBAAP,EAAkBgB,EAAlB,CAAqBC,EAArB,CAAwBC,CAAxB,CAA0B,UAA1B;AACA,GAFD;AAGA,EAJD;;AAMAJ,UAAS,OAAT,EAAkB,YAAM;AACvBC,KAAG,0BAAH,EAA+B,YAAM;AACpClB,UAAOE,KAAP,EAAciB,EAAd,CAAiBC,EAAjB,CAAoBC,CAApB,CAAsB,QAAtB;AACA,GAFD;AAGAH,KAAG,oCAAH,EAAyC,YAAM;AAC9ClB,UAAOE,KAAP,EAAciB,EAAd,CAAiBC,EAAjB,CAAoBE,EAApB,CAAuBC,UAAvB,CAAkCpB,wBAAlC;AACA,GAFD;AAGA,EAPD;;AASAc,UAAS,eAAT,EAA0B,YAAM;AAC/BC,KAAG,+BAAH,EAAoC,YAAM;AACzClB,UAAOE,MAAMsB,KAAb,EAAoBL,EAApB,CAAuBC,EAAvB,CAA0BE,EAA1B,CAA6B,OAA7B;AACA,GAFD;AAGAJ,KAAG,0BAAH,EAA+B,YAAM;AACpChB,SAAMuB,MAAN,CAAarB,KAAb,EACCsB,IADD,CACM,UAACC,IAAD,EAAU;AACfC,WAAOC,MAAP,CAAchB,YAAd,EAA4Bc,IAA5B;AACA3B,WAAO2B,IAAP,EAAaR,EAAb,CAAgBW,GAAhB,CAAoB;AACnBf,SAAI,CADe;AAEnBV,WAAM,UAFa;AAGnBC,YAAO,uBAHY;AAInBC,cAAS;AAJU,KAApB;AAMA,IATD;AAUA,GAXD;;AAaAW,KAAG,8BAAH,EAAmC,YAAM;AACxChB,SAAMuB,MAAN,CAAajB,KAAb,EACCkB,IADD,CACM,UAACC,IAAD,EAAU;AACfC,WAAOC,MAAP,CAAcjB,YAAd,EAA4Be,IAA5B;AACA3B,WAAO2B,IAAP,EAAaR,EAAb,CAAgBW,GAAhB,CAAoB;AACnBf,SAAI,CADe;AAEnBV,WAAM,OAFa;AAGnBC,YAAO,oBAHY;AAInBC,cAAS;AAJU,KAApB;AAMA,IATD;AAUA,GAXD;AAYAW,KAAG,sDAAH,EAA2D,YAAM;AAChEhB,SAAMuB,MAAN,CAAarB,KAAb,EACC2B,KADD,CACO,UAACC,KAAD,EAAW;AACjBhC,WAAOgC,KAAP,EAAcb,EAAd,CAAiBW,GAAjB,CAAqB,EAAEG,SAAS,qCAAX,EAArB;AACA,IAHD;AAIA,GALD;;AAOAf,KAAG,8DAAH,EAAmE,YAAM;AACxEhB,SAAMuB,MAAN,CAAahB,gBAAb,EACCsB,KADD,CACO,UAACC,KAAD,EAAW;AACjBhC,WAAOgC,KAAP,EAAcb,EAAd,CAAiBW,GAAjB,CAAqB,EAAEG,uCAAF,EAArB;AACA,IAHD;AAIA,GALD;;AAOAf,KAAG,gDAAH,EAAqD,YAAM;AAC1DhB,SAAMgC,UAAN,CAAiBvB,SAAjB,EACCe,IADD,CACM,kBAAU;AACf1B,WAAOmC,OAAOC,MAAd,EAAsBjB,EAAtB,CAAyBkB,KAAzB,CAA+B,CAA/B;AACA,IAHD;AAIA,GALD;;AAOAnB,KAAG,iCAAH,EAAsC,YAAM;AAC3ClB,UAAOE,MAAMsB,KAAN,CAAYY,MAAnB,EAA2BjB,EAA3B,CAA8BkB,KAA9B,CAAoC,CAApC;AACA,GAFD;AAGA,EArDD;;AAuDApB,UAAS,eAAT,EAA0B,YAAM;AAC/BC,KAAG,uBAAH,EAA4B,YAAM;AACjChB,SAAMoC,MAAN,CAAa1B,YAAb,EAA2BI,aAA3B,EACCU,IADD,CACM,UAACa,QAAD,EAAc;AACnBvC,WAAOuC,QAAP,EAAiBpB,EAAjB,CAAoBW,GAApB,CAAwB;AACvBf,SAAI,CADmB;AAEvBT,YAAO,oBAFgB;AAGvBD,WAAM,WAHiB;AAIvBE,cAAS;AAJc,KAAxB;AAMA,IARD;AASA,GAVD;AAWAW,KAAG,iCAAH,EAAsC,YAAM;AAC3ChB,SAAMoC,MAAN,CAAaxB,WAAb,EAA0BE,aAA1B,EACCe,KADD,CACO,UAACC,KAAD,EAAW;AACjBhC,WAAOgC,KAAP,EAAcb,EAAd,CAAiBW,GAAjB,CAAqB,EAAEG,yBAAF,EAArB;AACA,IAHD;AAIA,GALD;AAMA,EAlBD;;AAoBAhB,UAAS,UAAT,EAAqB,YAAM;AAC1BC,KAAG,2CAAH,EAAgD,YAAM;AACrDhB,SAAMsC,QAAN,CAAe,CAAf,EACCd,IADD,CACM,UAACC,IAAD,EAAU;AACf3B,WAAO2B,IAAP,EAAaR,EAAb,CAAgBW,GAAhB,CAAoB;AACnBf,SAAI,CADe;AAEnBV,WAAM,UAFa;AAGnBC,YAAO,uBAHY;AAInBC,cAAS;AAJU,KAApB;AAMA,IARD;AASA,GAVD;;AAYAW,KAAG,iEAAH,EAAsE,YAAM;AAC3EhB,SAAMsC,QAAN,CAAe,EAAf,EACCd,IADD,CACM,UAACC,IAAD,EAAU;AACf3B,WAAO2B,IAAP,EAAaR,EAAb,CAAgBW,GAAhB,CAAoB;AACnBf,SAAI,CADe;AAEnBV,WAAM,UAFa;AAGnBC,YAAO,uBAHY;AAInBC,cAAS;AAJU,KAApB;AAMA,IARD,EASCwB,KATD,CASO,UAACC,KAAD,EAAW;AACjBhC,WAAOgC,KAAP,EAAcb,EAAd,CAAiBW,GAAjB,CAAqB,EAAEE,OAAO,gBAAT,EAArB;AACA,IAXD;AAYA,GAbD;AAcA,EA3BD;;AA6BAf,UAAS,MAAT,EAAiB,YAAM;AACtBC,KAAG,mEAAH,EAAwE,YAAM;AAC7EhB,SAAMuC,IAAN,GACCV,KADD,CACO,UAACC,KAAD,EAAW;AACjBhC,WAAOgC,KAAP,EAAcb,EAAd,CAAiBW,GAAjB,CAAqB,EAAEG,2DAAF,EAArB;AACA,IAHD;AAIA,GALD;;AAOAf,KAAG,oDAAH,EAAyD,YAAM;AAC9DhB,SAAMuC,IAAN,CAAW;AACVC,WAAO;AACNrC,WAAM;AADA;AADG,IAAX,EAKCqB,IALD,CAKM,UAACC,IAAD,EAAU;AACf3B,WAAO2B,IAAP,EAAaR,EAAb,CAAgBW,GAAhB,CAAoB;AACnBf,SAAI,CADe;AAEnBT,YAAO,oBAFY;AAGnBD,WAAM,WAHa;AAInBE,cAAS;AAJU,KAApB;AAMA,IAZD;AAaA,GAdD;;AAgBAW,KAAG,qDAAH,EAA0D,YAAM;AAC/DhB,SAAMuC,IAAN,CAAW;AACVC,WAAO;AACNrC,WAAM,WADA;AAENU,SAAI;AAFE;AADG,IAAX,EAMCW,IAND,CAMM,UAACC,IAAD,EAAU;AACf3B,WAAO2B,IAAP,EAAaR,EAAb,CAAgBW,GAAhB,CAAoB;AACnBf,SAAI,CADe;AAEnBT,YAAO,oBAFY;AAGnBD,WAAM,WAHa;AAInBE,cAAS;AAJU,KAApB;AAMA,IAbD,EAcCwB,KAdD,CAcO,UAACC,KAAD,EAAW;AACjBhC,WAAOgC,KAAP,EAAcb,EAAd,CAAiBW,GAAjB,CAAqB,EAAEG,SAAS,gBAAX,EAArB;AACA,IAhBD;AAiBA,GAlBD;AAmBA,EA3CD;;AA6CAhB,UAAS,SAAT,EAAoB,YAAM;AACzBC,KAAG,uDAAH,EAA4D,YAAM;AACjEhB,SAAMyC,OAAN,GACCjB,IADD,CACM,UAACkB,QAAD,EAAc;AACnB5C,WAAO4C,QAAP,EAAiBzB,EAAjB,CAAoBC,EAApB,CAAuBE,EAAvB,CAA0B,OAA1B;AACAtB,WAAO4C,SAASR,MAAhB,EAAwBjB,EAAxB,CAA2BkB,KAA3B,CAAiC,CAAjC;AACA,IAJD;AAKA,GAND;;AAQAnB,KAAG,8DAAH,EAAmE,YAAM;AACxEhB,SAAMyC,OAAN,CAAc;AACbD,WAAO;AACNnC,cAAS;AADH;AADM,IAAd,EAKCmB,IALD,CAKM,UAACkB,QAAD,EAAc;AACnB5C,WAAO4C,QAAP,EAAiBzB,EAAjB,CAAoBC,EAApB,CAAuBE,EAAvB,CAA0B,OAA1B;AACAtB,WAAO4C,QAAP,EAAiBzB,EAAjB,CAAoB0B,IAApB,CAAyBT,MAAzB,CAAgCU,EAAhC,CAAmCC,EAAnC,CAAsCC,KAAtC,CAA4C,CAA5C;AACA,IARD;AASA,GAVD;;AAYA9B,KAAG,0DAAH,EAA+D,YAAM;AACpEhB,SAAMyC,OAAN,CAAc;AACbD,WAAO;AACNnC,cAAS;AADH;AADM,IAAd,EAKCmB,IALD,CAKM,UAACkB,QAAD,EAAc;AACnB5C,WAAO4C,QAAP,EAAiBzB,EAAjB,CAAoBC,EAApB,CAAuBE,EAAvB,CAA0B,OAA1B;AACAtB,WAAO4C,SAASR,MAAhB,EAAwBjB,EAAxB,CAA2BkB,KAA3B,CAAiC,CAAjC;AACA,IARD;AASA,GAVD;AAWA,EAhCD;;AAkCApB,UAAS,SAAT,EAAoB,YAAM;AACzBC,KAAG,0DAAH,EAA+D,YAAM;AACpEhB,SAAM+C,OAAN,CAAc;AACbP,WAAO;AACN3B,SAAI;AADE;AADM,IAAd,EAKCW,IALD,CAKM,UAACO,OAAD,EAAa;AAClBjC,WAAOiC,OAAP,EAAgBd,EAAhB,CAAmBW,GAAnB,CAAuB,EAAEG,SAAS,uBAAX,EAAvB;AACA,IAPD;AAQA,GATD;;AAWAf,KAAG,wEAAH,EAA6E,YAAM;AAClFhB,SAAM+C,OAAN,CAAc;AACbP,WAAO;AACN3B,SAAI;AADE;AADM,IAAd,EAKCgB,KALD,CAKO,UAACE,OAAD,EAAa;AACnBjC,WAAOiC,OAAP,EAAgBd,EAAhB,CAAmBW,GAAnB,CAAuB,EAAEG,SAAS,kCAAX,EAAvB;AACA,IAPD;AAQA,GATD;AAUA,EAtBD;AAuBA,CA9ND","file":"test.js","sourcesContent":["\nimport chai from 'chai';\nimport DataModel from './../src/DummyDataModel';\n\nconst { expect } = chai;\nconst users = new DataModel('users', ['name'], ['name', 'email']);\nconst user1 = {\n\tname: 'jane doe',\n\temail: 'jane_doe@somebody.com',\n\taddress: 'somewhere in the world',\n}\nconst user2 = {\n\tname: 'alice',\n\temail: 'alice@somebody.com',\n\taddress: 'lives in another planet',\n}\n\nconst userWithoutEmail ={\n\tname: 'alice',\n\tnoEmail: 'alice@somebody.com',\n\taddress: 'lives in another planet',\n}\n\nconst bulkUsers = [\n\t{\n\t\tname: 'brain',\n\t\temail: 'brain@email.com',\n\t\taddress: 'lives in pluto',\n\t},\n\t{\n\t\tname: 'walter',\n\t\temail: 'walter@email.com',\n\t\taddress: 'lives in mars',\n\t},\n\t{\n\t\tname: 'ryan',\n\t\temail: 'ryan@email.com',\n\t\taddress: 'lives in neptune',\n\t},\n]\nconst createdUser2 = {};\nconst createdUser1 = {};\nconst wrongdUser1 = {\n\tid: 10,\n\tname: 'alice',\n\temail: 'alice@somebody.com',\n\taddress: 'lives in another planet',\n}\nconst userToUpdate1 = {\n\tname: 'alice bob',\n\taddress: 'now living in planet earth',\n}\n\ndescribe('Dummy Data Model', () => {\n\tdescribe('DataModel', () => {\n\t\tit('should export a function', () => {\n\t\t\texpect(DataModel).to.be.a('function');\n\t\t})\n\t});\n\n\tdescribe('Users', () => {\n\t\tit('should export a function', () => {\n\t\t\texpect(users).to.be.a('object');\n\t\t});\n\t\tit('should be an instance of DataModel', () => {\n\t\t\texpect(users).to.be.an.instanceOf(DataModel);\n\t\t})\n\t});\n\n\tdescribe('create method', () => {\n\t\tit('user model should be an array', () => {\n\t\t\texpect(users.model).to.be.an('array');\n\t\t})\n\t\tit('should create a new user', () => {\n\t\t\tusers.create(user1)\n\t\t\t.then((user) => {\n\t\t\t\tObject.assign(createdUser1, user);\n\t\t\t\texpect(user).to.eql({\n\t\t\t\t\tid: 1,\n\t\t\t\t\tname: 'jane doe',\n\t\t\t\t\temail: 'jane_doe@somebody.com',\n\t\t\t\t\taddress: 'somewhere in the world'\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tit('should create a another user', () => {\n\t\t\tusers.create(user2)\n\t\t\t.then((user) => {\n\t\t\t\tObject.assign(createdUser2, user);\n\t\t\t\texpect(user).to.eql({\n\t\t\t\t\tid: 2,\n\t\t\t\t\tname: 'alice',\n\t\t\t\t\temail: 'alice@somebody.com',\n\t\t\t\t\taddress: 'lives in another planet'\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t\tit('should not create a model with unique key constriant', () => {\n\t\t\tusers.create(user1)\n\t\t\t.catch((error) => {\n\t\t\t\texpect(error).to.eql({ message: 'duplicate entry for unique key name' });\n\t\t\t});\n\t\t});\n\n\t\tit('should not create a model if a required field is not present', () => {\n\t\t\tusers.create(userWithoutEmail)\n\t\t\t.catch((error) => {\n\t\t\t\texpect(error).to.eql({ message: `missing required field email` });\n\t\t\t});\n\t\t});\n\n\t\tit('should create multiple users using bulk create', () => {\n\t\t\tusers.bulkCreate(bulkUsers)\n\t\t\t.then(result => {\n\t\t\t\texpect(result.length).to.equal(3)\n\t\t\t})\n\t\t})\n\n\t\tit('lenght of model should increase', () => {\n\t\t\texpect(users.model.length).to.equal(5);\n\t\t})\n\t});\n\n\tdescribe('update method', () => {\n\t\tit('should update a model', () => {\n\t\t\tusers.update(createdUser2, userToUpdate1)\n\t\t\t.then((newUser2) => {\n\t\t\t\texpect(newUser2).to.eql({\n\t\t\t\t\tid: 2,\n\t\t\t\t\temail: 'alice@somebody.com',\n\t\t\t\t\tname: 'alice bob',\n\t\t\t\t\taddress: 'now living in planet earth',\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t\tit('should not update a wrong model', () => {\n\t\t\tusers.update(wrongdUser1, userToUpdate1)\n\t\t\t.catch((error) => {\n\t\t\t\texpect(error).to.eql({ message: `user not found` })\n\t\t\t})\n\t\t});\n\t});\n\n\tdescribe('findById', () => {\n\t\tit('should return the model with the given id', () => {\n\t\t\tusers.findById(1)\n\t\t\t.then((user) => {\n\t\t\t\texpect(user).to.eql({\n\t\t\t\t\tid: 1,\n\t\t\t\t\tname: 'jane doe',\n\t\t\t\t\temail: 'jane_doe@somebody.com',\n\t\t\t\t\taddress: 'somewhere in the world',\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tit('should return not found if model with given id is not not found', () => {\n\t\t\tusers.findById(10)\n\t\t\t.then((user) => {\n\t\t\t\texpect(user).to.eql({\n\t\t\t\t\tid: 1,\n\t\t\t\t\tname: 'jane doe',\n\t\t\t\t\temail: 'jane_doe@somebody.com',\n\t\t\t\t\taddress: 'somewhere in the world',\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\texpect(error).to.eql({ error: 'user not found' });\n\t\t\t});\n\t\t});\n\t});\n\n\tdescribe('find', () => {\n\t\tit('should return an error message if no where condition is specified', () => {\n\t\t\tusers.find()\n\t\t\t.catch((error) => {\n\t\t\t\texpect(error).to.eql({ message: `missing object propertiy 'where' to find model`})\n\t\t\t})\n\t\t});\n\n\t\tit('should find a model that meet the given conditions', () => {\n\t\t\tusers.find({\n\t\t\t\twhere: {\n\t\t\t\t\tname: 'alice bob',\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then((user) => {\n\t\t\t\texpect(user).to.eql({\n\t\t\t\t\tid: 2,\n\t\t\t\t\temail: 'alice@somebody.com',\n\t\t\t\t\tname: 'alice bob',\n\t\t\t\t\taddress: 'now living in planet earth',\n\t\t\t\t})\n\t\t\t})\n\t\t});\n\n\t\tit('should only return a model that meet all conditions', () => {\n\t\t\tusers.find({\n\t\t\t\twhere: {\n\t\t\t\t\tname: 'alice bob',\n\t\t\t\t\tid: 4,\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then((user) => {\n\t\t\t\texpect(user).to.eql({\n\t\t\t\t\tid: 2,\n\t\t\t\t\temail: 'alice@somebody.com',\n\t\t\t\t\tname: 'alice bob',\n\t\t\t\t\taddress: 'now living in planet earth',\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\texpect(error).to.eql({ message: 'user not found' });\n\t\t\t});\n\t\t});\n\t});\n\n\tdescribe('findAll', () => {\n\t\tit('should return all models if no condition is specified', () => {\n\t\t\tusers.findAll()\n\t\t\t.then((allUsers) => {\n\t\t\t\texpect(allUsers).to.be.an('array');\n\t\t\t\texpect(allUsers.length).to.equal(5);\n\t\t\t});\n\t\t});\n\n\t\tit('should return all models that meets the specified conditions', () => {\n\t\t\tusers.findAll({\n\t\t\t\twhere: {\n\t\t\t\t\taddress: 'somewhere in the world',\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then((allUsers) => {\n\t\t\t\texpect(allUsers).to.be.an('array');\n\t\t\t\texpect(allUsers).to.have.length.of.at.least(1);\n\t\t\t});\n\t\t});\n\n\t\tit('should return an empty if no matching condition is found', () => {\n\t\t\tusers.findAll({\n\t\t\t\twhere: {\n\t\t\t\t\taddress: 'somewhere in the world a',\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then((allUsers) => {\n\t\t\t\texpect(allUsers).to.be.an('array');\n\t\t\t\texpect(allUsers.length).to.equal(0);\n\t\t\t});\n\t\t});\n\t});\n\n\tdescribe('destroy', () => {\n\t\tit('should delete a model that meets the specified condition', () => {\n\t\t\tusers.destroy({\n\t\t\t\twhere: {\n\t\t\t\t\tid: 1,\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then((message) => {\n\t\t\t\texpect(message).to.eql({ message: 'user has been deleted' });\n\t\t\t});\n\t\t});\n\n\t\tit('should  not delete a model that does not meets the specified condition', () => {\n\t\t\tusers.destroy({\n\t\t\t\twhere: {\n\t\t\t\t\tid: 5,\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((message) => {\n\t\t\t\texpect(message).to.eql({ message: 'user not found, not action taken' });\n\t\t\t});\n\t\t});\n\t});\n});\n"]}